{"version":3,"sources":["redux/async-actions.js","experience/mobile-menu.js","experience/mobile.js","experience/desktop.js","experience/experience.js"],"names":["loadExperiences","a","jsonPath","Axios","get","response","setExperiences","data","console","log","showToast","sendMail","values","post","MAIL_URL","connect","state","experiences","misc","props","className","map","exp","idx","key","data-id","onClick","goToSlide","company","contractorCompany","fromMonth","fromYear","toMonth","toYear","role","isInsite","country","sliderSettings","arrows","dots","infinite","slidesToScroll","slidesToShow","speed","sliderRef","ref","event","slideIndex","AppService","getClickId","slickGoTo","Number","experience","showExperienceDetail","expId","showModal","MODAL_EXPERIENCE","noop","preventDefault","stopPropagation","id","icon","faUserNinja","descriptionShort","href","fadeInAnimation","keyframes","fadeIn","Content","styled","div","useEffect"],"mappings":"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","file":"static/js/8.b56837a2.chunk.js","sourcesContent":["import { setExperiences } from \"./misc.actions\";\nimport Axios from \"axios\";\nimport { MAIL_URL } from \"../constants\";\nimport { showToast } from \"./toast.actions\";\n\nexport const loadExperiences = async () => {\n  const jsonPath = \"./experience.json\";\n  try {\n    const response = await Axios.get(jsonPath);\n    setExperiences(response.data);\n  } catch (error) {\n    console.log(`loadExperiences - error loading ${jsonPath}:`, error);\n    showToast(\"Error loading experiences data, please reload.\", false);\n  }\n};\n\nexport const sendMail = async values => {\n  try {\n    await Axios.post(MAIL_URL, values);\n    showToast(\"Your message was delivered.\", true);\n    return true;\n  } catch (error) {\n    console.log(\"sendMail error:\", error);\n    showToast(\n      \"There was an error sending your message, please try again.\",\n      false\n    );\n    return false;\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst MobileMenu = props => {\n  return (\n    <ul className=\"text-xs\">\n      {props.experiences &&\n        props.experiences.map((exp, idx) => (\n          <li key={idx} className=\"my-2\">\n            <button\n              className=\"w-full text-left p-2 border rounded border-gray-300 bg-white shadow-sm\"\n              data-id={idx}\n              onClick={props.goToSlide}\n            >\n              <div className=\"flex justify-between\">\n                <div>\n                  <span className=\"text-sm font-bold\">{exp.company}</span>\n                  {exp.contractorCompany && (\n                    <span>{` (in ${exp.contractorCompany})`}</span>\n                  )}\n                </div>\n                <div>{`${exp.fromMonth} ${exp.fromYear}/${exp.toMonth} ${exp.toYear}`}</div>\n              </div>\n\n              <div className=\"role-and-country flex justify-between\">\n                <div>{exp.role}</div>\n                <div>{`${exp.isInsite ? \"Insite\" : \"Remotely\"} - ${\n                  exp.country\n                }`}</div>\n              </div>\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nMobileMenu.propTypes = {\n  goToSlide: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  experiences: state.misc.experiences\n});\n\nexport default connect(mapStateToProps)(MobileMenu);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Slider from \"react-slick\";\nimport MobileMenu from \"./mobile-menu\";\nimport Card from \"./card\";\nimport AppService from \"../app-service\";\n\nconst sliderSettings = {\n  arrows: false,\n  dots: true,\n  infinite: true,\n  slidesToScroll: 1,\n  slidesToShow: 1,\n  speed: 500\n};\n\nconst Mobile = props => {\n  let sliderRef = null;\n\n  const setSliderRef = ref => (sliderRef = ref);\n\n  const goToSlide = event => {\n    const slideIndex = AppService.getClickId(event);\n    sliderRef.slickGoTo(Number(slideIndex) + 1);\n  };\n\n  return (\n    <div className=\"block sm:hidden -mt-4\">\n      <Slider ref={setSliderRef} {...sliderSettings}>\n        <MobileMenu goToSlide={goToSlide} />\n        {props.experiences.map((exp, idx) => (\n          <Card key={idx} experience={exp} />\n        ))}\n      </Slider>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  experiences: state.misc.experiences\n});\n\nexport default connect(mapStateToProps)(Mobile);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserNinja } from \"@fortawesome/free-solid-svg-icons\";\nimport AppService from \"../app-service\";\nimport { showModal } from \"../redux/modal.actions\";\nimport { MODAL_EXPERIENCE } from \"../constants\";\n\nconst Desktop = props => {\n  const showExperienceDetail = event => {\n    const expId = AppService.getClickId(event);\n    showModal(MODAL_EXPERIENCE, `${expId}`);\n  };\n\n  const noop = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    return false;\n  };\n\n  return (\n    <div className=\"hidden sm:block\">\n      <div className=\"experience-desktop-grid text-xs screen730:text-sm lg:text-base\">\n        {props.experiences.map((exp, idx) => (\n          <div\n            key={idx}\n            className=\"desktop-card shadow-lg\"\n            data-id={exp.id}\n            onClick={showExperienceDetail}\n          >\n            <div className=\"px-2 pt-2\">\n              <div className=\"flex justify-between\">\n                <div>\n                  <span className=\"text-sm md:text-md lg:text-base font-bold\">\n                    {exp.company}\n                  </span>\n                </div>\n                <div className=\"hidden screen960:block\">{`${\n                  exp.isInsite ? \"Insite\" : \"Remotely\"\n                } - ${exp.country}`}</div>\n                <div className=\"block screen960:hidden\">{exp.country}</div>\n              </div>\n              <div className=\"flex justify-between\">\n                <div className=\"block screen960:hidden\"></div>\n                <div className=\"hidden screen960:block text-sm\">\n                  {exp.contractorCompany && (\n                    <span>{` (in ${exp.contractorCompany})`}</span>\n                  )}\n                </div>\n                <div className=\"text-sm\">{`${exp.fromMonth} ${exp.fromYear}/${exp.toMonth} ${exp.toYear}`}</div>\n              </div>\n            </div>\n            <div className=\"border-t border-gray-300 px-2 py-1 mt-1\">\n              <FontAwesomeIcon\n                icon={faUserNinja}\n                className=\"text-1xl text-gray-500 mr-2\"\n              />\n              <span>{exp.role}</span>\n            </div>\n            <div className=\"row-description-short border-t border-gray-300 text-justify px-2 pt-1 pb-4\">\n              {exp.descriptionShort}\n            </div>\n            <a\n              href=\"/#\"\n              onClick={noop}\n              className=\"absolute right-0 bottom-0 mr-1 mb-1 text-xs text-red-500\"\n            >\n              more\n            </a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  experiences: state.misc.experiences\n});\n\nexport default connect(mapStateToProps)(Desktop);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled, { keyframes } from \"styled-components\";\nimport { fadeIn } from \"react-animations\";\nimport { loadExperiences } from \"../redux/async-actions\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./experience.css\";\nimport Mobile from \"./mobile\";\nimport Desktop from \"./desktop\";\nimport \"../css/background.css\";\n\nconst fadeInAnimation = keyframes`${fadeIn}`;\n\nconst Content = styled.div`\n  animation: 2s ${fadeInAnimation};\n`;\n\nconst Experience = props => {\n  useEffect(() => {\n    loadExperiences();\n  }, []);\n\n  if (props.experiences) {\n    return (\n      <Content>\n        <Mobile />\n        <Desktop />\n      </Content>\n    );\n  }\n\n  return (\n    <div className=\"flex h-full w-full items-center justify-center\">\n      <p className=\"text-gray-500\">Loading experiences...</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  experiences: state.misc.experiences\n});\n\nexport default connect(mapStateToProps)(Experience);\n"],"sourceRoot":""}