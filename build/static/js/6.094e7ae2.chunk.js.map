{"version":3,"sources":["shared/loader/page-loader.js","experience/card.js","shared/images/photo_small.jpg","app/nav-bar.js","shared/modal/modal.js","app/mobile-menu-button.js","shared/toast/toast.js","app/footer.js","shared/page-wrapper.js","app/routes.js","app/app.js","app-service.js"],"names":["React","memo","className","experience","company","contractorCompany","isInsite","country","icon","faUserNinja","role","timeDescription","fromMonth","fromYear","toMonth","toYear","description","map","parr","idxParr","key","tech_dev","Fragment","faLaptopCode","tech_build","faIndustry","tech_test","faCogs","module","exports","slideInLeftAnimation","keyframes","slideInLeft","NavBarContent","styled","section","props","isLeft","mapDispatchToProps","hideModal","connect","state","isInitRoute","app","initRoute","withRouter","handleClick","event","classes","figure","figCaption","li","handleSetActive","to","myPage","PAGES","find","page","id","history","push","route","src","PHOTO","alt","activeClass","spy","onSetActive","duration","smooth","onClick","label","href","process","download","faFileDownload","Modal","setAppElement","modalId","modal","modalData","experiences","byId","dispatch","useDispatch","closeModal","stopPropagation","useEffect","handleKeyDown","keyCode","document","addEventListener","removeEventListener","isCentered","MODAL_HEADER_MENU","isOpen","onRequestClose","contentLabel","overlayClassName","closeTimeoutMS","MODAL_CLOSE_TIME","MODAL_EXPERIENCE","getContent","MenuButton","button","MobileMenuButton","showModal","aria-label","faBars","message","toast","isSuccess","fade","title","fadeToast","slideInUpAnimation","slideInUp","Content","footer","faPaperPlane","target","rel","faGithub","faLinkedin","faInstagram","faFacebook","fadeInAnimation","fadeIn","PageWrapper","LazyComponent","name","PAGE_ABOUT","lazy","PAGE_SKILLS","PAGE_CONTACT","Suspense","fallback","withFooter","defaultProps","HomeLazyLoader","ExperienceLazyLoader","pageId","AppService","getIdFromRoute","location","pathname","setScroll","setFlagInitRoute","PAGE_HOME","PAGE_EXPERIENCE","exact","from","idx","path","children","Axios","defaults","transformRequest","obj","Object","keys","p","encodeURIComponent","join","headers","post","handleWidth","handleHeight","onResize","width","height","GOOGLE_ANALYTICS_KEY","sendMail","values","a","MAIL_URL","console","log","getClickId","preventDefault","myValue","currentTarget","getAttribute","test","Number","scroller","scrollTo","foundPage","getRouteFromId","noop"],"mappings":"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","file":"static/js/6.094e7ae2.chunk.js","sourcesContent":["import React from \"react\";\nimport Loader from \"./loader\";\n\n/**\n * Loader component shown before loading a page.\n * @returns {Object} DIV DOM node, uses whole screen.\n */\nconst PageLoader = () => {\n  return (\n    <div className=\"flex h-screen w-full items-center justify-center\">\n      <Loader className=\"text-gray-500 h-16 w-16\" />\n    </div>\n  );\n};\n\nexport default React.memo(PageLoader);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUserNinja,\n  faLaptopCode,\n  faIndustry,\n  faCogs\n} from \"@fortawesome/free-solid-svg-icons\";\n\n/**\n * Single experience detailed card component. On mobile it's shown in a single slide. On desktop is shown inside a modal.\n */\nconst Card = ({ experience }) => {\n  return (\n    <div className=\"border rounded bg-white text-xs sm:text-base\">\n      {/* Header */}\n      <div className=\"border-b border-gray-200 px-4 py-2 sm:py-4\">\n        {/* Head Row 1: company, country */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center\">\n            <div className=\"font-bold text-xs sm:text-xl\">\n              {experience.company}\n            </div>\n            {experience.contractorCompany && (\n              <span className=\"ml-1\">(in {experience.contractorCompany})</span>\n            )}\n          </div>\n          <div className=\"flex items-center\">\n            <span className=\"text-xs hidden sm:block\">\n              {experience.isInsite ? \"Insite\" : \"Remotely\"}\n            </span>\n            <span className=\"mx-2 hidden sm:block\">-</span>\n            <span>{experience.country}</span>\n          </div>\n        </div>\n        {/* Head Row 2: role, dates */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <FontAwesomeIcon\n              icon={faUserNinja}\n              className=\"text-1xl text-gray-500 mr-2\"\n            />\n            <span>{experience.role}</span>\n          </div>\n          <div>\n            <span className=\"text-xs mr-3 hidden sm:inline\">\n              ({experience.timeDescription})\n            </span>\n            <span>{`${experience.fromMonth} ${experience.fromYear} - ${experience.toMonth} ${experience.toYear}`}</span>\n          </div>\n        </div>\n      </div>\n      {/* Body description */}\n      <div className=\"border-b border-gray-200 px-4 pt-2 sm:pt-4 pb-0 sm:pb-2\">\n        {experience.description.map((parr, idxParr) => (\n          <p key={idxParr} className=\"pb-2 text-justify\">\n            {parr}\n          </p>\n        ))}\n      </div>\n      {/* Body Tech */}\n      <div className=\"experience-tech-grid px-4 py-2 sm:py-4\">\n        {experience.tech_dev && (\n          <React.Fragment>\n            <FontAwesomeIcon\n              icon={faLaptopCode}\n              className=\"text-1xl mr-2 mt-1 text-gray-700\"\n            />\n            <div className=\"font-bold text-gray-700 text-right hidden sm:block\">\n              Dev:\n            </div>\n            <div>{experience.tech_dev}</div>\n          </React.Fragment>\n        )}\n        {experience.tech_build && (\n          <React.Fragment>\n            <FontAwesomeIcon\n              icon={faIndustry}\n              className=\"text-1xl mr-2 mt-1 text-gray-700\"\n            />\n            <div className=\"font-bold text-gray-700 text-right hidden sm:block\">\n              Build:\n            </div>\n            <div>{experience.tech_build}</div>\n          </React.Fragment>\n        )}\n        {experience.tech_test && (\n          <React.Fragment>\n            <FontAwesomeIcon\n              icon={faCogs}\n              className=\"text-1xl mr-2 mt-1 text-gray-700\"\n            />\n            <div className=\"font-bold text-gray-700 text-right hidden sm:block\">\n              Test:\n            </div>\n            <div>{experience.tech_test}</div>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  experience: PropTypes.object.isRequired // Single experience object from JSON\n};\n\nexport default React.memo(Card);\n","module.exports = __webpack_public_path__ + \"static/media/photo_small.10dbf592.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-scroll\";\nimport styled, { keyframes } from \"styled-components\";\nimport { slideInLeft } from \"react-animations\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport PHOTO from \"../shared/images/photo_small.jpg\";\nimport { hideModal } from \"../shared/modal/ducks\";\nimport { PAGES } from \"../constants\";\n\n/**\n * Firt load animation keyframes\n */\nconst slideInLeftAnimation = keyframes`${slideInLeft}`;\n/**\n * Page animation. Applied on component mount only for left column navbar,\n * Mobile menu has no animation.\n */\nconst NavBarContent = styled.section`\n  animation: ${props => (props.isLeft ? \"2s\" : \"0s\")} ${slideInLeftAnimation};\n`;\n\n/**\n * Navigation bar shown on left side. Mobile shows it as a modal menu at top right.\n * @param {Object} props - Props\n * @returns {Object} HTML DOM section node.\n */\nconst NavBar = props => {\n  /**\n   * Clicking on any button bar hides modal. Used on mobile menu.\n   * @param {Object} event - Click event\n   */\n  const handleClick = event => {\n    if (!props.isLeft) {\n      props.hideModal();\n    }\n  };\n\n  /**\n   * CSS classes to apply for left bar or mobile menu.\n   */\n  const classes = props.isLeft\n    ? {\n        section:\n          \"hidden sm:flex flex-col justify-center items-center bg-gray-900 text-gray-400 overflow-auto fixed top-0 h-full sm:w-24 md:w-32 lg:w-40 sm:text-xs md:text-sm lg:text-base\",\n        figure: \"w-20 md:w-24 lg:32 mb-8\",\n        figCaption: \"text-white text-center mt-2 whitespace-no-wrap\",\n        li: \"border-8 border-gray-900\"\n      }\n    : {\n        section:\n          \"flex flex-col justify-center items-center bg-gray-100 text-gray-500 text-sm\",\n        figure: \"w-16 mb-4\",\n        figCaption: \"hidden\",\n        li: \"border-8 border-gray-100\"\n      };\n\n  /**\n   * Applied only after App is first mounted, updates url based on current active page.\n   * @param {String} to - Page id\n   */\n  const handleSetActive = to => {\n    if (props.isInitRoute) {\n      const myPage = PAGES.find(page => page.id === to);\n      props.history.push(myPage.route);\n    }\n  };\n\n  return (\n    <NavBarContent isLeft={props.isLeft} className={classes.section}>\n      <figure className={classes.figure}>\n        <img\n          src={PHOTO}\n          alt=\"Hector Pizarro\"\n          className=\"border-4 border-gray-600 rounded-full\"\n        />\n        <figcaption className={classes.figCaption}>Hector Pizarro</figcaption>\n      </figure>\n      <nav className=\"container\">\n        <ul className=\"list-none\">\n          {PAGES.map(page => (\n            <li key={page.id} className={classes.li}>\n              <Link\n                className={`cursor-pointer block text-center pb-2 border-b transition-colors transition-500 hover:border-red-500 ${\n                  props.isLeft\n                    ? \"border-gray-900 hover:text-white\"\n                    : \"border-gray-100 hover:text-gray-900\"\n                }`}\n                activeClass=\"active text-white border-red-500\"\n                to={page.id}\n                spy={true}\n                onSetActive={handleSetActive}\n                duration={1000}\n                smooth=\"easeInOutQuad\"\n                onClick={handleClick}\n              >\n                {page.label}\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <div className=\"text-center mt-10\">\n          <a\n            href={`${process.env.PUBLIC_URL}/hector-pizarro-resume.pdf`}\n            download\n            className=\"border rounded px-1 py-1 bg-gray-200 hover:bg-white text-gray-700 hover:text-black transition-colors transition-500\"\n          >\n            <FontAwesomeIcon icon={faFileDownload} className=\"text-1xl mr-2\" />\n            <span className=\"text-sm\">Resume</span>\n          </a>\n        </div>\n      </nav>\n    </NavBarContent>\n  );\n};\n\nNavBar.propTypes = {\n  // Flag, show on left column if TRUE, otherwise show as a modal for mobile\n  isLeft: PropTypes.bool.isRequired,\n  history: PropTypes.object.isRequired, // Provided automatically by withRouter\n  // From Redux, flag to update url to current selected page\n  isInitRoute: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isInitRoute: state.app.initRoute\n});\n\nconst mapDispatchToProps = {\n  hideModal\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavBar));\n","import React, { useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\nimport { hideModal } from \"./ducks\";\nimport {\n  MODAL_HEADER_MENU,\n  MODAL_CLOSE_TIME,\n  MODAL_EXPERIENCE\n} from \"../../constants\";\nimport Card from \"../../experience/card\";\nimport NavBar from \"../../app/nav-bar\";\n\nModal.setAppElement(\"#root\"); // Required by react-modal library\n\n/**\n * Modal component. Only visible if modal id stored in Redux.\n * @returns {Object} Modal component\n */\nconst AppModal = ({ modalId, modalData, experiences }) => {\n  const dispatch = useDispatch();\n\n  /**\n   * Reset modal id, this closes modal.\n   * @param {Object} event - Optional, usually click event\n   */\n  const closeModal = event => {\n    if (event) {\n      event.stopPropagation();\n    }\n    dispatch(hideModal());\n  };\n\n  // Executed once on modal mount\n  useEffect(() => {\n    /**\n     * If modal visible, hide modal if ESC keyboard pressed.\n     * @param {Object} event - Key event\n     */\n    const handleKeyDown = event => {\n      if (modalId && event.keyCode === 27) {\n        closeModal();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n    // eslint-disable-next-line\n  }, []);\n\n  /**\n   * Returns content to show in modal, forwards the dark overlay.\n   * @returns {Object} DIV for mobile menu, Card component for experiences\n   */\n  const getContent = () => {\n    switch (modalId) {\n      // Modal menu at top right\n      case MODAL_HEADER_MENU: {\n        return (\n          <div className=\"py-2 px-2\">\n            <NavBar isLeft={false} closeModal={closeModal} />\n          </div>\n        );\n      }\n      // Experience detail card\n      case MODAL_EXPERIENCE:\n        return <Card experience={experiences[modalData]} />;\n\n      // Unknown, modal is empty\n      default:\n        return null;\n    }\n  };\n\n  // Modal shown top right for mobile menu only.\n  const isCentered = modalId !== MODAL_HEADER_MENU;\n\n  return (\n    <Modal\n      isOpen={modalId !== null}\n      onRequestClose={closeModal}\n      contentLabel=\"Modal\"\n      overlayClassName=\"mobile-menu-overlay inset-0 fixed flex items-center justify-center\"\n      className={`mobile-menu-content absolute outline-none rounded shadow-lg overflow-y-auto ${\n        isCentered ? \"md:max-w-lg mx-auto w-10/12\" : \"top-0 right-0\"\n      } ${modalId === MODAL_HEADER_MENU ? \"bg-gray-100\" : \"bg-white\"}`}\n      closeTimeoutMS={MODAL_CLOSE_TIME}\n    >\n      {getContent(modalId, modalData)}\n    </Modal>\n  );\n};\n\nAppModal.propTypes = {\n  modalId: PropTypes.string, // Modal id, if null no modal visible\n  modalData: PropTypes.any, // Modal data, optional\n  experiences: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  modalId: state.modal.modalId,\n  modalData: state.modal.modalData,\n  experiences: state.experiences.byId\n});\n\nexport default connect(mapStateToProps)(AppModal);\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\n\nimport { showModal } from \"../shared/modal/ducks\";\nimport { MODAL_HEADER_MENU } from \"../constants\";\n\n/**\n * Styled button\n */\nconst MenuButton = styled.button`\n  right: 1.25rem;\n  top: 1.25rem;\n`;\n\n/**\n * Floating mobile menu button shown on top right of screen.\n * Visible only under 640px screen width.\n * @returns {Object} - HTML button\n */\nconst MobileMenuButton = () => {\n  const dispatch = useDispatch();\n\n  /**\n   * Store modal id on Redux to open mobile menu modal.\n   */\n  const openModal = () => dispatch(showModal({ id: MODAL_HEADER_MENU }));\n\n  return (\n    <MenuButton\n      className=\"menu-button fixed p-0 m-0 block sm:hidden border border-gray-400 bg-gray-100 rounded-full px-2 shadow-lg\"\n      onClick={openModal}\n      aria-label=\"Mobile Menu Button\"\n    >\n      <FontAwesomeIcon icon={faBars} className=\"text-1xl\" />\n    </MenuButton>\n  );\n};\n\nexport default MobileMenuButton;\n","import React from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport \"./toast.css\";\nimport { fadeToast } from \"./ducks\";\n/**\n * Toast message component. Shown for a small amoun of time at top right.\n * @param {Object} props - Props\n * @returns {Object} DIV DOM node\n */\nconst Toast = props => {\n  const dispatch = useDispatch();\n\n  const handleClose = () => dispatch(fadeToast());\n\n  // Don't render if there is no message\n  if (props.message === \"\") {\n    return null;\n  }\n\n  return (\n    <div\n      className={`toast pointer-events-none fixed z-10 w-full text-right font-bold ${\n        props.fade ? \"fadeMe\" : \"\"\n      }`}\n    >\n      <button\n        className={`inline-flex pointer-events-auto items-center justify-center close cursor-pointer px-4 py-2 text-white ${\n          props.isSuccess ? \"bg-blue-500\" : \"bg-red-500\"\n        }`}\n        title=\"close\"\n        onClick={handleClose}\n      >\n        {props.message}\n      </button>\n    </div>\n  );\n};\n\nToast.propTypes = {\n  message: PropTypes.string.isRequired, // Message to show. Hide toast if \"\"\n  // Toggles background color: Blue if TRUE, otherwise red.\n  isSuccess: PropTypes.bool.isRequired,\n  fade: PropTypes.bool.isRequired // Flag to fade toast before hiding it\n};\n\nconst mapStateToProps = state => ({\n  message: state.toast.message,\n  isSuccess: state.toast.isSuccess,\n  fade: state.toast.fade\n});\n\nexport default connect(mapStateToProps)(Toast);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faGithub,\n  faLinkedin,\n  faFacebook,\n  faInstagram\n} from \"@fortawesome/free-brands-svg-icons\";\nimport styled, { keyframes } from \"styled-components\";\nimport { slideInUp } from \"react-animations\";\n\n/**\n * CSS keyframes for load animation\n */\nconst slideInUpAnimation = keyframes`${slideInUp}`;\n/**\n * Styled 'footer' HTML5 element. Shows slide up animation on component first load.\n */\nconst Content = styled.footer`\n  animation: 2s ${slideInUpAnimation};\n`;\n\n/**\n * Footer component, shown at Contact page bottom.\n * @returns {Object} HTML DOM footer node\n */\nconst Footer = () => {\n  return (\n    <Content className=\"flex items-center justify-between h-20 bg-gray-900 px-5\">\n      <div>\n        <span className=\"text-gray-400 transition-color transition-1000 hover:text-white\">\n          <FontAwesomeIcon\n            icon={faPaperPlane}\n            className=\"text-3xl mr-2 hidden sm:inline\"\n          />\n          <span>hpizarro@gmail.com</span>\n        </span>\n      </div>\n      <div className=\"text-3xl whitespace-no-wrap\">\n        <a\n          href=\"https://github.com/hectorpizarro\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-gray-400 transition-color transition-1000 hover:text-white ml-4\"\n          aria-label=\"Github\"\n        >\n          <FontAwesomeIcon icon={faGithub} />\n        </a>\n        <a\n          href=\"https://www.linkedin.com/in/hectorpizarro/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-gray-400 transition-color transition-1000 hover:text-white ml-4\"\n          aria-label=\"Linkedin\"\n        >\n          <FontAwesomeIcon icon={faLinkedin} />\n        </a>\n        <a\n          href=\"https://www.instagram.com/hectorpizarrom/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-gray-400 transition-color transition-1000 hover:text-white ml-4\"\n          aria-label=\"Instagram\"\n        >\n          <FontAwesomeIcon icon={faInstagram} />\n        </a>\n        <a\n          href=\"https://www.facebook.com/hectorpizarrom\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-gray-400 transition-color transition-1000 hover:text-white ml-4\"\n          aria-label=\"Facebook\"\n        >\n          <FontAwesomeIcon icon={faFacebook} />\n        </a>\n      </div>\n    </Content>\n  );\n};\n\nexport default React.memo(Footer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Element } from \"react-scroll\";\nimport styled, { keyframes } from \"styled-components\";\nimport { fadeIn } from \"react-animations\";\nimport PageLoader from \"./loader/page-loader\";\nimport Footer from \"../app/footer\";\nimport { PAGE_ABOUT, PAGE_SKILLS, PAGE_CONTACT } from \"../constants\";\n\n// Initial animation keyframes\nconst fadeInAnimation = keyframes`${fadeIn}`;\n// Styled to animate at component initial mount\nconst Content = styled.section`\n  animation: 2s ${fadeInAnimation};\n`;\n\n/**\n * Wrapper to load the following pages: About, Skills, Contact.\n * Wrapper provides title, lazy loads page component and animates loading.\n * @param {Object} props - Props\n */\nconst PageWrapper = props => {\n  // Component to load page content lazily.\n  let LazyComponent = null;\n  switch (props.name) {\n    case PAGE_ABOUT:\n      LazyComponent = React.lazy(() => import(\"../about/about\"));\n      break;\n    case PAGE_SKILLS:\n      LazyComponent = React.lazy(() => import(\"../skills/skills\"));\n      break;\n    case PAGE_CONTACT:\n      LazyComponent = React.lazy(() => import(\"../contact/contact\"));\n      break;\n    default:\n      // If page unknown return null to avoid rendering\n      return null;\n  }\n\n  return (\n    <Element\n      name={props.name}\n      className={`flex flex-col h-screen w-full ${props.className}`}\n    >\n      <React.Suspense fallback={<PageLoader />}>\n        <Content className=\"py-4 px-4 sm:px-8 h-full\">\n          {props.title && (\n            <div className=\"mb-4\">\n              <h1 className=\"font-bold sm:text-2xl\">{props.title}</h1>\n            </div>\n          )}\n          <LazyComponent />\n        </Content>\n        {props.withFooter && <Footer />}\n      </React.Suspense>\n    </Element>\n  );\n};\n\nPageWrapper.propTypes = {\n  name: PropTypes.string.isRequired, // Element name, required for react-scroll\n  className: PropTypes.string, // Optional, additional CSS class names\n  title: PropTypes.string, // Optional, shows title at page top\n  withFooter: PropTypes.bool // Optional, show footer at page bottom\n};\n\nPageWrapper.defaultProps = {\n  className: \"\",\n  withFooter: false\n};\n\nexport default React.memo(PageWrapper);\n","import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Element } from \"react-scroll\";\nimport PropTypes from \"prop-types\";\nimport PageLoader from \"../shared/loader/page-loader\";\nimport NavBar from \"./nav-bar\";\nimport AppModal from \"../shared/modal/modal\";\nimport MobileMenuButton from \"./mobile-menu-button\";\nimport AppService from \"../app-service\";\nimport Toast from \"../shared/toast/toast\";\nimport {\n  PAGE_ABOUT,\n  PAGE_SKILLS,\n  PAGE_EXPERIENCE,\n  PAGE_CONTACT,\n  PAGE_HOME,\n  PAGES\n} from \"../constants\";\nimport PageWrapper from \"../shared/page-wrapper\";\nimport { setFlagInitRoute } from \"./ducks\";\n\n/**\n * Component to load Home page component lazily.\n */\nconst HomeLazyLoader = React.lazy(() => import(\"../home/home\"));\n/**\n * Component to load Experience page component lazily.\n */\nconst ExperienceLazyLoader = React.lazy(() =>\n  import(\"../experience/experience\")\n);\n\n/**\n * Routes to load inside App component. This was extracted from App because we want to scroll to the route defined in the url once this component is mounted.\n * @param {Object} props - Props object, expected 'isInitRoute' flag to scroll only once and 'location' provided by withRouter.\n * @returns {Object} - DIV DOM node with defined routes and all pages loaded lazily.\n */\nconst Routes = props => {\n  const dispatch = useDispatch();\n\n  //Execute when component is mounted.\n  useEffect(() => {\n    const pageId = AppService.getIdFromRoute(props.location.pathname);\n    // Url has a valid route defined, scroll to page\n    if (pageId) {\n      AppService.setScroll(pageId, 0);\n    }\n    dispatch(setFlagInitRoute()); // set flag so scroll is executed only once\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"flex h-screen antialiased text-base\">\n      <React.Suspense>\n        <NavBar isLeft={true} />\n      </React.Suspense>\n      <main className=\"inline-block w-full h-full sm:ml-24 md:ml-32 lg:ml-40\">\n        {/* Page Home */}\n        <React.Suspense\n          fallback={\n            <Element name={PAGE_HOME} className=\"flex flex-col h-screen w-full\">\n              <PageLoader />\n            </Element>\n          }\n        >\n          <HomeLazyLoader />\n        </React.Suspense>\n        {/* Page About */}\n        <PageWrapper name={PAGE_ABOUT} title=\"About\" />\n        {/* Page Skills */}\n        <PageWrapper\n          name={PAGE_SKILLS}\n          title=\"Skills\"\n          className=\"bg-gray-100\"\n        />\n        {/* Page Experience */}\n        <Element\n          name={PAGE_EXPERIENCE}\n          className=\"flex flex-col h-screen w-full backgroundPattern01\"\n        >\n          <React.Suspense fallback={<PageLoader />}>\n            <section className=\"py-4 px-4 sm:px-8 h-full\">\n              <div className=\"mb-4\">\n                <h1 className=\"font-bold sm:text-2xl\">Experience</h1>\n              </div>\n              <ExperienceLazyLoader />\n            </section>\n          </React.Suspense>\n        </Element>\n        {/* Page Contact */}\n        <PageWrapper name={PAGE_CONTACT} title=\"Contact\" withFooter />\n      </main>\n      <React.Suspense>\n        <Toast />\n        <AppModal />\n        <MobileMenuButton />\n      </React.Suspense>\n      {/* Routes don't load pages, they are used only to update the url */}\n      <Switch>\n        {/* Default route is home */}\n        <Redirect exact from=\"/\" to=\"/home\" />\n        {PAGES.map((page, idx) => (\n          <Route key={idx} path={page.route} children={() => null} />\n        ))}\n      </Switch>\n    </div>\n  );\n};\n\nRoutes.propTypes = {\n  // Provided by withRouter, contains current url path\n  location: PropTypes.object.isRequired,\n  // Provided by Redux, flag to load url route on component first mount\n  isInitRoute: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isInitRoute: state.app.initRoute // Flag to scroll content to initial url page\n});\n\nexport default connect(mapStateToProps)(withRouter(React.memo(Routes)));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactResizeDetector from \"react-resize-detector\";\nimport Axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport Analytics from \"react-router-ga\";\nimport { MODAL_HEADER_MENU, GOOGLE_ANALYTICS_KEY } from \"../constants\";\nimport { hideModal } from \"../shared/modal/ducks\";\nimport Routes from \"./routes\";\n\n/**\n * Axios setup. Set function to transform request data into url encoded string.\n */\nAxios.defaults.transformRequest = obj => {\n  if (obj) {\n    return Object.keys(obj)\n      .map(p => `${encodeURIComponent(p)}=${encodeURIComponent(obj[p])}`)\n      .join(\"&\");\n  }\n  return [];\n};\n/**\n * Axios setup. Set ContentType for all POST requests\n */\nAxios.defaults.headers.post[\"Content-Type\"] =\n  \"application/x-www-form-urlencoded\";\n\n/**\n * Main App component, is mounted on index.html.\n * @param {Object} props - Expected modalId from Redux.\n * @returns {Object} - BrowserRouter component that handles routing.\n */\nconst App = props => {\n  /**\n   * Closes mobile menu modal on browser resize.\n   * @param {Number} width - Screen width\n   * @param {Number} height - Screen height\n   */\n  const handleCloseOnResize = (width, height) => {\n    if (props.modalId === MODAL_HEADER_MENU) {\n      props.hideModal();\n    }\n  };\n\n  return (\n    <BrowserRouter>\n      <ReactResizeDetector\n        handleWidth\n        handleHeight\n        onResize={handleCloseOnResize}\n      />\n      <Analytics id={GOOGLE_ANALYTICS_KEY}>\n        <Routes />\n      </Analytics>\n    </BrowserRouter>\n  );\n};\n\nApp.propTypes = {\n  modalId: PropTypes.string // Active modal id. Null if no modal visible.\n};\n\nconst mapStateToProps = state => ({\n  modalId: state.modal.modalId // Id of current opened modal\n});\n\nconst mapDispatchToProps = {\n  hideModal\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(App));\n","/**\n * Methods used on whole app.\n */\nimport { scroller } from \"react-scroll\";\nimport { PAGES, MAIL_URL } from \"./constants\";\nimport Axios from \"axios\";\n/**\n * If provided myValue is an integer as string returns Number.\n * @param {(Number|String)} myValue - A value, can be string or number.\n * @returns {(Number|String)} Value\n */\nconst getValue = myValue => (/^\\d+$/.test(myValue) ? Number(myValue) : myValue);\n\n/**\n * Used on any button click, prevents event default action and propagation and returns 'data-id' value.\n * @param {Object} event - Click event\n * @returns {(Number|String)} Value inside data-id\n */\nconst getClickId = event => {\n  if (event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  return getValue(event.currentTarget.getAttribute(\"data-id\"));\n};\n\n/**\n * Moves scroll to provided page.\n * @param {String} pageId - Page id\n * @param {Number} duration - Optional, animation duration in ms. Default 1 sec\n */\nconst setScroll = (pageId, duration = 1000) => {\n  scroller.scrollTo(pageId, {\n    duration,\n    smooth: \"easeInOutQuad\"\n  });\n};\n\n/**\n * Returns page id related to provided route, NULL if not found.\n * @param {String} route - A route, see PAGES in constants.js\n * @returns {(String|null)} Page id\n */\nconst getIdFromRoute = route => {\n  const foundPage = PAGES.find(page => page.route === route);\n  return foundPage ? foundPage.id : null;\n};\n\n/**\n * Returns route related to provided page id, NULL if not found.\n * @param {String} pageId - Page id\n * @returns {(String|Null)} Route string\n */\nconst getRouteFromId = pageId => {\n  const foundPage = PAGES.find(page => page.id === pageId);\n  return foundPage ? foundPage.route : null;\n};\n\n/**\n * Prevents click and returns false to stop click behavior.\n * @param {Object} event - Click event\n */\nconst noop = event => {\n  event.preventDefault();\n  event.stopPropagation();\n  return false;\n};\n\nexport const sendMail = async values => {\n  try {\n    await Axios.post(MAIL_URL, values);\n    return true;\n  } catch (error) {\n    console.log(\"sendMail error:\", error);\n    return false;\n  }\n};\n\nconst AppService = {\n  getClickId,\n  setScroll,\n  getIdFromRoute,\n  getRouteFromId,\n  noop\n};\n\nexport default AppService;\n"],"sourceRoot":""}